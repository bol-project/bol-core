apiVersion: v1
kind: Service
metadata:
  name: bol-__CI_BUILD_REF_SLUG__
  namespace: __CI_ENV_SLUG__
  labels:
    app: bol-__CI_BUILD_REF_SLUG__
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
    prometheus.io/scheme: "http"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 80
      protocol: TCP
    - name: node-p2p
      protocol: TCP
      port: 10333
      targetPort: 10333
    - name: node-rpc
      protocol: TCP
      port: 10332
      targetPort: 10332
  selector:
    app: bol-__CI_BUILD_REF_SLUG__
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: bol-__CI_BUILD_REF_SLUG__
  namespace: __CI_ENV_SLUG__
  labels:
    app: bol-__CI_BUILD_REF_SLUG__
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - __CI_BUILD_REF_SLUG__.demo.bolchain.net
    secretName: __CI_ENV_SLUG__-__CI_BUILD_REF_SLUG__-tls-prod
  rules:
  - host: __CI_BUILD_REF_SLUG__.demo.bolchain.net
    http:
      paths:
      - path: /
        backend:
          serviceName: bol-__CI_BUILD_REF_SLUG__
          servicePort: 10332